document.write("<h1>Setup Documentation</h1>\n\n<p>Every Peach documentation repository should contain two parts of information:</p>\n\n<ul>\n<li>TOC.ini</li>\n<li>Documentation for every supported language</li>\n</ul>\n\n<p>Repository structure should look like as follows:</p>\n<pre><code class=\"language-sh\">$ tree\n.\n├── TOC.ini\n├── en-US\n│   ├── advanced\n│   │   ├── README.md\n│   │   └── ...\n│   ├── faqs\n│   │   └── README.md\n│   ├── howto\n│   │   ├── README.md\n│   │   ├── ...\n│   └── intro\n│       ├── README.md\n│       ├── ...\n└── zh-CN\n│   ├── ...\n</code></pre>\n\n<p>Let me explain them one at a time.</p>\n\n<h2>TOC.ini</h2>\n\n<p>In the repository root directory, you must have a file named <code>TOC.ini</code>, which stands for <strong>Table Of Contents</strong>.</p>\n\n<p>In this file, you will use <a href=\"https://en.wikipedia.org/wiki/INI_file\">INI</a> syntax to define the directories and files, and their organization.</p>\n\n<p>Here is the <code>TOC.ini</code> from <a href=\"http://peachdocs.org\">Peach Docs</a>:</p>\n<pre><code class=\"language-ini\">-: intro\n-: howto\n-: advanced\n-: faqs\n\n[intro]\n-: README\n-: installation\n-: getting_started\n-: roadmap\n\n[howto]\n-: README\n-: documentation\n-: webhook\n-: templates\n-: static_resources\n-: disqus\n-: ga\n\n[advanced]\n-: README\n-: config_cheat_sheet\n\n[faqs]\n-: README\n</code></pre>\n\n<p>:speech_balloon: Note that Peach only supports single-level directories.</p>\n\n<p>In the default section, define the directories and their order:</p>\n<pre><code class=\"language-ini\">-: intro\n-: howto\n-: advanced\n-: faqs\n</code></pre>\n\n<p>These names are the same as the directory&rsquo;s name.</p>\n\n<p>Then create a section for each name. The section order doesn&rsquo;t matter:</p>\n<pre><code class=\"language-ini\">[intro]\n...\n[howto]\n...\n[advanced]\n...\n[faqs]\n...\n</code></pre>\n\n<p>In each section, define the files and their order:</p>\n<pre><code class=\"language-ini\">[intro]\n-: README\n-: installation\n-: getting_started\n-: roadmap\n</code></pre>\n\n<p>Because files use Markdown syntax, their names must end with an <code>.md</code> extension. However, since we know that, no extension needs to be added in the <code>TOC.ini</code> file at all.</p>\n\n<p>:exclamation: :exclamation: :exclamation:</p>\n\n<ul>\n<li>Every section must have at least one key.</li>\n<li>The first key in every section corresponds to the directory&rsquo;s information.</li>\n<li>This file itself will not be shown as a document page, but for the directory. For example, <a href=\"../intro\">Introduction</a>.</li>\n<li>The name of the first key can be anything, but conventionnally, <code>README</code> and <code>README.md</code> are used as file names.</li>\n</ul>\n\n<h2>Localization</h2>\n\n<p>In the repository root directory, every supported language should have a directory with corresponding <a href=\"https://msdn.microsoft.com/en-us/library/ee825488(v=cs.20).aspx\">Language Culture Name</a>.</p>\n\n<p>By default, Peach supports English (<code>en-US</code>) and Simplified Chinese (<code>zh-CN</code>), so Peach has two directories as follows:</p>\n<pre><code class=\"language-sh\">$ tree\n.\n├── en-US\n│   ├── ...\n└── zh-CN\n│   ├── ...\n</code></pre>\n\n<p>And of course, both of these directories have exactly the same structure and file name.</p>\n\n<h2>Document</h2>\n\n<p>Every file must define itself in the very beginning; real content follows afterwards:</p>\n<pre><code>---\nname: Introduction\n---\n\n# Peach\n\nPeach is a web server for multi-language, real-time synchronization and searchable documentation.\n...\n</code></pre>\n\n<p>If you only need to define information in a directory but it has no content, skip the content:</p>\n<pre><code>---\nname: Advanced\n---\n</code></pre>\n\n<h2>Links</h2>\n\n<p>Rendering links in Peach basically works the same way as anywhere else:</p>\n\n<ul>\n<li>Link to page in the same level: <code>[Webhook](webhook)</code>.</li>\n<li>Link to directory page: <code>[Introduction](../intro)</code>.</li>\n<li>Link to page in another directory: <code>[Getting Started](../intro/getting_started)</code>.</li>\n</ul>\n\n<h2>Images</h2>\n\n<p>By default, documentaion pages have a URL prefix <code>/docs</code>, and all your images must be put in a subdirectory of repository root directory named <code>images</code>.</p>\n\n<p>This is how to link a image: <code>![](/docs/images/github_webhook.png)</code>.</p>\n\n<h2>Configuration</h2>\n\n<p>All configuration changes must be made in file <code>custom/app.ini</code>.</p>\n\n<h3>Locales</h3>\n\n<p>By default, Peach supports English and Simplified Chinese, so if you&rsquo;re writing documentation for these two languages, you don&rsquo;t need to change settings in this part.</p>\n\n<p>If you&rsquo;re just writing documentation in English, you would need to rewrite corresponding values:</p>\n<pre><code class=\"language-ini\">[i18n]\nLANGS = en-US\nNAMES = English\n</code></pre>\n\n<p>If you&rsquo;re supporting more than two languages:</p>\n<pre><code class=\"language-ini\">[i18n]\nLANGS = en-US,zh-CN,fr-FR\nNAMES = English,简体中文,Français\n</code></pre>\n\n<p>Note that the first language, <code>en-US</code> in both of the examples above, will also be known as <strong>default language</strong>. Any page that is not available in other languages will present content in this language.</p>\n\n<h3>Git Repository</h3>\n\n<p>In production, use remote Git source as your documentation repository:</p>\n<pre><code class=\"language-ini\">RUN_MODE = prod\n\n[docs]\nTYPE = remote\nTARGET = https://github.com/Unknwon/peach-docs.git\nTARGET_DIR = # Add subdirectory here if docs are not located in the root directory of your repository\n</code></pre>\n\n<p>:white_flower: <code>TARGET_DIR</code> option requires Peach version <strong>0.9.6</strong></p>\n\n<p>This means Peach knows where to fetch and update your documentation, and cache all documents.</p>\n\n<h2>Developing Locally</h2>\n\n<p>To make your life easier while you&rsquo;re developing your documentation locally, Peach also supports specification of a local target path of your documentation repository:</p>\n<pre><code class=\"language-ini\">RUN_MODE = dev\n\n[docs]\nTYPE = local\nTARGET = ~unknwon/mydocs\n</code></pre>\n\n<p>In <code>dev</code> mode, Peach reloads your documents every time you refresh a page, so you can preview results instantly.</p>\n")